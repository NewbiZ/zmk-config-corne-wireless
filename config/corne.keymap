/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk { quick-release; };

/ {
    behaviors {
        tap_dance_sk_shift_capsword: tap_dance_sk_shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SK_SHIFT_CAPSWORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        alt_q_1: alt_q_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_Q_1";
            bindings = <&kp Q>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        alt_w_2: alt_w_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_W_2";
            bindings = <&kp W>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            bindings = <&kp RETURN>;
            key-positions = <19 20>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Qwerty";
            bindings = <
&kp ESCAPE        &alt_q_1  &alt_w_2  &kp E         &kp R                         &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P     &kp BACKSLASH
&kp TAB           &kp A     &kp S     &kp D         &kp F                         &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z     &kp X     &kp C         &kp V                         &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &to 5
                                      &kp LEFT_ALT  &tap_dance_sk_shift_capsword  &kp SPACE    &kp BACKSPACE  &mo 1  &mo 2
            >;
        };

        Numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp COMMA     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;

            label = "Numbers";
        };

        Symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans    &trans  &kp MINUS  &kp UNDERSCORE  &kp ASTERISK   &trans  &trans
&trans  &kp HASH         &kp DOLLAR        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans  &kp COLON  &kp CARET       &kp PERCENT    &trans  &trans
&trans  &kp LESS_THAN    &kp GREATER_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &trans  &kp PLUS   &kp EQUAL       &kp AMPERSAND  &trans  &trans
                                           &trans                &trans                 &trans    &trans  &trans     &trans
            >;

            label = "Symbols";
        };

        Navigation {
            bindings = <
&kp LS(LA(Q))  &kp LA(NUMBER_1)  &kp LA(N2)     &kp LA(N3)  &kp LA(N4)  &kp LA(N5)           &kp LA(N6)      &kp LA(N7)      &kp LA(N8)    &kp LA(N9)       &kp LA(N0)  &trans
&kp LA(TAB)    &trans            &kp LA(S)      &trans      &kp LA(F)   &trans               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans      &trans
&trans         &trans            &kp LA(LS(E))  &trans      &kp LA(V)   &trans               &trans          &trans          &trans        &trans           &trans      &trans
                                                &trans      &trans      &kp LA(LS(SPACE))    &trans          &trans          &trans
            >;

            label = "Navigation";
        };

        Magic {
            bindings = <
&sys_reset  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Magic";
        };

        Gallium {
            display-name = "Gallium";
            bindings = <
&kp ESCAPE        &kp B  &kp L  &kp D  &kp C                         &kp V        &kp J          &kp Y  &kp O      &kp U    &kp SEMI  &kp BACKSLASH
&kp TAB           &kp N  &kp R  &kp T  &kp S                         &kp G        &kp P          &kp H  &kp A      &kp E    &kp I     &kp SQT
&kp LEFT_CONTROL  &kp X  &kp Q  &kp M  &kp W                         &kp Z        &kp K          &kp F  &kp COMMA  &kp DOT  &kp FSLH  &to 0
                                &mo 3  &tap_dance_sk_shift_capsword  &kp SPACE    &kp BACKSPACE  &mo 1  &mo 2
            >;
        };
    };
};
